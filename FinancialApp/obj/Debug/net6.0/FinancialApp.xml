<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FinancialApp</name>
    </assembly>
    <members>
        <member name="M:FinancialApp.Controllers.AuthController.Register(FinancialApp.Models.DomainModels.RegisterDto)">
            <remarks>
             A POST methode for creating a new user (registreation proccess) and creates an account for this user.
            </remarks>
            <response code="200">Returns 
                    {
                    "result": {
                  "succeeded": true,
              "errors": []
                        },
                  "account": {
                "id": "c6052046-d614-4edb-8f67-334270cda3ce",
            "balance": 5000,
                        "userId": "fbcedad5-119a-40f8-8d0c-40b05e31b829",
                    "createdDate": "0001-01-01T00:00:00"
              }
            }
            </response>
            <response code="400">Email and password are required OR their is mistake in the input </response>
            <response code="409">If Email already exist (conflict)</response>
        </member>
        <member name="M:FinancialApp.Controllers.AuthController.Login(FinancialApp.Models.DomainModels.LoginDto)">
            <remarks>
             A POST methode for logging in and returning a token.
            </remarks>
            <response code="200">Returns 
             {"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZmJjZWRhZDUtMTE5YS00MGY4LThkMGMtNDBiMDVlMzFiODI5IiwibmJmIjoxNjk3ODUxNTc3LCJleHAiOjE2OTc4NTUxNzcsImlhdCI6MTY5Nzg1MTU3NywiaXNzIjoiaXNzdWVyIiwiYXVkIjoiYXVkaWVuY2UifQ.qdK8rLbDdV8TPkQ_mLiI4rH1BiIfTRETSddztaHV7X4"}
            </response>
            <response code="400"> if not providding both email and password  OR their is mistake in the input </response>
            <response code="401"> if Invalid Email or password   OR their is mistake in the input </response>
        </member>
        <member name="M:FinancialApp.Controllers.TransfersController.FundTransfer(FinancialApp.Models.DataTransferObject.TransferRequest)">
            <summary>
             This endpoint requires authentication.
            </summary>
            <remarks>
            A post methode that transfer money from the user who authenticated to another user.
            To access this endpoint, include a valid JWT token in the 'Authorization' header as a bearer token.
            Example: 'Authorization: Bearer your-token-here'
            </remarks>
             <response code="200">Returns 
             {
              "success": true,
              "message": "Funds transferred successfully.you balance is: 900.0"
            }
             </response>
            <response code="401">If Invalid Token or the password that you provided is not for the user</response>
            <response code="400">If Insufficient funds in the source accountor  their is mistake in the body If this user does not have account or the distenation account is your account (you cant transfer to yourself)</response>
            <response code="500">If An error occurred it shows the message</response>
            <response code="404">If this user does not have an account or the url is wrong or destination account not found</response>
        </member>
        <member name="M:FinancialApp.Controllers.TransfersController.GetAccountBalance">
             <summary>
              This endpoint requires authentication.
             </summary>
             <remarks>
             A GET methode that Retrieve Account Balance of the user who authenticated.
             To access this endpoint, include a valid JWT token in the 'Authorization' header as a bearer token.
             Example: 'Authorization: Bearer your-token-here'
             </remarks>
             <response code="200">Returns 
             {
               "balance": 5000.0
            }
             </response>
             <response code="401">If Invalid Token </response>
             <response code="500">If An error occurred it shows the message</response>
             <response code="404">If this user doesn't have an account or the url is wrong </response>
        </member>
        <member name="M:FinancialApp.Controllers.TransfersController.GetTransactionHistory">
            <summary>
            This endpoint requires authentication.
            </summary>
            <remarks>
             A GET methode that's return the TransactionHistory of an authenticated user.
            To access this endpoint, include a valid JWT token in the 'Authorization' header as a bearer token.
            Example: 'Authorization: Bearer your-token-here'
            </remarks>
            <response code="401">If Invalid Token</response>
            <response code="400">If this user does not have account</response>
            <response code="500">If An error occurred it shows the message</response>
        </member>
        <member name="M:FinancialApp.Controllers.TransfersController.GenerateAccountStatement(System.DateTime,System.DateTime)">
             <summary>
            This endpoint requires authentication.
             </summary>
             <remarks>
              A GET methode that Generates Account Statement for the user who authenticated.
             To access this endpoint, include a valid JWT token in the 'Authorization' header as a bearer token.
             Example: 'Authorization: Bearer your-token-here'
             </remarks>
            <response code="200">Returns 
            {
            "accountId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "startDate": "2023-10-21T01:21:55",
            "endDate": "2023-11-21T00:00:00Z",
            "startingBalance": 550.0,
            "endingBalance": 500.0,
            "transactions": [
                    {
                    "id": "f628eed1-83b8-47b8-b998-780bac9802d2",
                "amount": 50,
                        "balanceBeforeTransaction": 550.0,
                    "type": 2,
                "date": "2023-10-21T01:22:06.2595494+03:00",
                        "sourceAccountId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "destinationAccountId": "3fa85f64-5717-4562-b3fc-2c963f66afa7"
            }
            ]
             }
            </response>
            <response code="401">If Invalid Token </response>
            <response code="400">If The startDate is before the account CreatedDate OR their is mistake in the body If this user does not have account</response>
            <response code="500">If An error occurred it shows the message</response>
            <response code="404">If this user does not have an account or the url is wrong or destination account not found</response>
        </member>
    </members>
</doc>
